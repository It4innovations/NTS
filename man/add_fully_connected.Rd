% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_graph.R
\name{add_fully_connected}
\alias{add_fully_connected}
\title{Add fully connected level to an existing network}
\usage{
add_fully_connected(df_edges, set, weight, name_to = "")
}
\arguments{
\item{df_edges}{data.frame of existing network with columns `from`, `to`, `weight`, `level`, `set`.}

\item{set}{integer vector, each number represents a number of vertices in a set.}

\item{weight}{integer vector, \itemize{
\item{}{if single number is provided the same weight is set for all the edges,}
\item{}{if the number of elements in a vector equals to the `length(set)` then the weight is the same for each set,}
\item{}{if the number of elements equals to the `sum(set)` then each edge to a given vertice has unique weight,}
\item{}{if the number of elements equals to the `n_from*sum(set)` then all edges has unique weight.}}}

\item{name_to}{string, prefix for the names of vertices on the next level. Each vertice will have number appended to it for the uniqueness of names. Default is "1_".}
}
\value{
data.frame with the definition of edges by the columns `from`, `to`, `weight`, `level`, `set`.
}
\description{
The function adds new level of vertices to an existing network. These vertices are fully connected
to the vertices of the last level before addition.
}
\details{
## Weights:
Weights are set to the edges in a direction from the left to the right from the side of the newly added vertices.
}
\examples{


network <- create_source(set = c(3,3), weight = 1) \%>\%
   add_fully_connected(set = 4,
                       weight = 3)
plot_network(network)

network2 <- create_source(set = c(2,3), weight = 1) \%>\%
  add_fully_connected(set = 2,
                      weight = c(3,2))
plot_network(network2)

network3 <- create_source(set = c(1,1), weight = 1) \%>\%
  add_fully_connected(set = 2,
                      weight = c(1,2,3,4))
plot_network(network3)


}
