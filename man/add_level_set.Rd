% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_graph.R
\name{add_level_set}
\alias{add_level_set}
\title{Add a new level of vertices to an existing network}
\usage{
add_level_set(
  df_edges,
  previous_set,
  set,
  weight,
  name_to = "",
  check_previous = TRUE
)
}
\arguments{
\item{df_edges}{data.frame of existing network with columns `from`, `to`, `weight`, `level`, `set`.}

\item{previous_set}{integer vector/list, each number represents a number of a set in the last level.}

\item{set}{integer vector, each number represents a number of vertices in a set.}

\item{weight}{integer vector/list, \itemize{
\item{}{if single number is provided the same weight is set for all the edges}
\item{}{if the number of elements in a vector equals to the `length(set)` then the weight is the same for each set}
\item{}{if the number of elements equals to the `sum(set)` then each edge has unique weight}
}}

\item{name_to}{string, prefix for the names of vertices on the next level. Each vertice will have number appended to it for the uniqueness of names. Default is "1_".}

\item{check_previous}{boolean, should connection to all previous sets be checked? FALSE is used for visualization of partial setup. It is recommended to have TRUE in normal usage. Default TRUE.}
}
\value{
data.frame with the definition of edges by the columns `from`, `to`, `weight`, `level`, `set`.
}
\description{
This function adds new data to an existing data.frame with a definition
}
\details{
## Weights:
If you want to add an unique weight for each edge, please, use vector notation. E.g. if there will be 4 edges from the
previous sets, use weight = c(1,2,3,4) for example.
Weights are set to the edges in a direction from the left to the right from the side of the newly added vertices.

## weight and previous_set as list:
Here is a detailed example how to use lists correctly. This code is from the examples section, see below.

add_level_set(list(`1` = c(2,8), `2` = 4),
              list(`1` = c(1,3), `2` = 2),
              c(   `1` = 2,      `2` = 1))

Numbers in ` ` are the number of sets. `1` = c(1,3) in the second line means that we want to map
set no.1 and set no.3 in the last level to the 2 vertices of set no. 1 in the new level (third line: `1` = 2)
with weight 2 from the last set no.1 to the new set no.1 and weight 8 from the last set no.3 to the new set no.1 (first line: `1` = c(2,8)).
Second column `2` is in similar way. We want to map last set no.2 to the new set no.2 (containing one vertice)
with weight 4.
}
\examples{

network <- create_source(set = c(2,2,1),
                         weight = c(1,2,1)) \%>\%
  add_level_set(weight = list(c(1,2),4),
                previous_set = list(c(3, 1), 2),
                set = c(1,3))
plot_network(network)

network2 <- create_source(set = c(2,2),
                          weight = c(1,2)) \%>\%
  add_level_set(weight = c(1,2,3,4),
                previous_set = list(2,1),
                set = c(1,1))
plot_network(network2)

network3 <- create_source(set = c(2,2),
                          weight = c(1,2)) \%>\%
  add_level_set(weight = c(1),
                previous_set = list(2,1),
                set = c(1,1))
plot_network(network3)

}
